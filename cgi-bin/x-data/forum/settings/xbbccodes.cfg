
################
## XBBC Codes ##
################

# Note that there settings are written in perl code.
# Any changes that corrupt this code might let the
# forum run badly.




# Smiley Index.
#____________________________________________________________________
#
# The symbols (between qq||) will be detected,
# an a filename is build up, based on the name behind the arrow.
#____________________________________________________________________
#

%Smileys	= ( qq|::)| 		=> 'rolleyes',		qq|;)| 		=> 'wink',
		    qq|:D|  		=> 'cheesy',		qq|;D| 		=> 'grin',
		    qq|&gt;:-(|		=> 'angry',		qq|:(|		=> 'sad',
		    qq|:o|		=> 'shocked',		qq|8)|		=> 'cool',
		    qq|???|		=> 'confused',		qq|:p|		=> 'tongue',
		    qq|:)|		=> 'happy',		qq|{:-(|	=> 'embarassed',
		    qq|:-x|		=> 'mouthshut',		qq|:-/|		=> 'undecided',
		    qq|:-*|		=> 'kiss',		qq|:'(|		=> 'cry',
		    qq|69)| 		=> 'rolleyes',		qq|?!?|		=> 'confused',
		    qq|B)|		=> 'glasses',		qq|(:-)|	=> 'oldman',
		    qq|%-)|		=> 'squareeyes',	qq[(|-|]	=> 'robot',
		    qq[(8|]		=> 'ogre',		qq[|:-)]	=> 'rambo',
		    qq|:-[|		=> 'vampire',		qq|&gt;:-)|	=> 'devious',
		    qq|&lt;:-)|		=> 'chinese',		qq|N:)|		=> 'sleeping',

		# Smileys with nose.
		    qq|:-)|		=> 'happy',		qq|;-)| 	=> 'wink',
		    qq|:-(|		=> 'sad',		qq|:-p|		=> 'tongue',
		    qq|:-D|		=> 'cheesy',		qq|;-D|		=> 'grin',
		  );




# XBBC codes.
#____________________________________________________________________
#
# These codes (between []) will be detected, and converted
# into the HTML codes behind the arrow. The %PARAM1% . %PARAMn%
# codes will be replaced by any arguments in the comma list
# like in: [font=Times,red,3]...[/font]
#____________________________________________________________________
#

# Special notes:
# The code, nomarkup and quotepost tag have a special meaning.
# Some effects of those codes might not have been written here
# as HTML code. The XBBC processer however, does those changes.

%XBBCOpenCodes	= ( 'b'		=> '<B>',
		    'i'		=> '<I>',
		    'u'		=> '<U>',
		    's'		=> '<STRIKE>',
		    'font'	=> '<FONT face="%PARAM1%" color="%PARAM2%" size="%PARAM3%">',
		    'size'	=> '<FONT size="%PARAM1%">',
		    'color'	=> '<FONT color="%PARAM1%">',
		    'red'	=> '<FONT color="red">',
		    'blue'	=> '<FONT color="blue">',
		    'green'	=> '<FONT color="green">',
		    'yellow'	=> '<FONT color="yellow">',
		    'purple'	=> '<FONT color="purple">',
		    'black'	=> '<FONT color="black">',
		    'white'	=> '<FONT color="white">',
		    'gray'	=> '<FONT color="gray">',
		    'align'	=> '<DIV align="%PARAM1%">',
		    'tt'	=> '<TT>',
		    'hr'	=> '<HR color="#FFFFFF">',
		    'code'	=> '<CODE>',
		    'pre'	=> '<CODE>',
		    'nomarkup'	=> '<!--BEGIN NOMARKUP-->',
		    'sub'	=> '<SUB>',
		    'sup'	=> '<SUP>',
		    'list'	=> '<UL type="%PARAM1%">',
		    'enum'	=> '<OL type="$PARAM1%">',
		    '-'		=> '<LI>',
		    '-@'	=> '<LI type="disc">',
		    '-o'	=> '<LI type="circle">',
		    '-#'	=> '<LI type="square">',
		    '-disc'	=> '<LI type="disc">',
		    '-circle'	=> '<LI type="circle">',
		    '-square'	=> '<LI type="square">',
		    '-u'	=> '<LI type="A">',
		    '-l'	=> '<LI type="a">',
		    '-upper'	=> '<LI type="A">',
		    '-lower'	=> '<LI type="a">',
		    '-i'	=> '<LI type="I">',
		    '-r'	=> '<LI type="I">',
		    '-roman'	=> '<LI type="I">',
		    '-1'	=> '<LI type="1">',
		    '-n'	=> '<LI type="1">',
		    '-number'	=> '<LI type="1">',
		    '#'		=> '&%PARAM1%;',
		    'move'	=> '<MARQUEE behavior="scroll" direction="left" scrollamount="%PARAM1%" scrolldelay="50">',
		    'indent'	=> '<BLOCKQUOTE>',
		    'quote'	=> '<BR><FONT size="-1"><BLOCKQUOTE>%PARAM1%<HR>',
		    'quotepost'	=> '<BR><FONT size="-1"><BLOCKQUOTE>%PARAM1%<HR>', # %PARAM1% will be changed programmatically if it's a post index
		    'table'	=> '<TABLE border="%PARAM1%">',
		    'row'	=> '<TR><TD valign="top"><FONT color="#000000">',
		    '|'		=> '</FONT></TD><TD valign="top"><FONT color="#000000">',
		    'flash'	=> '<OBJECT classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="%PARAM2%" height="%PARAM3%" codebase="http://active.macromedia.com/flash2/cabs/swflash.cab#version=4,0,0,0"><PARAM name="src" value="%PARAM1%"><PARAM name="play" value="true"><PARAM name="loop" value="true"><PARAM name="quality" value="high"><EMBED src="%PARAM1%" width="%PARAM2%" height="%PARAM3%" play="true" loop="true" quality="high"></EMBED></OBJECT>',
		    'image'	=> '<IMG src="%PARAM1%" width="%PARAM2%" height="%PARAM3%" alt="%PARAM4%" title="%PARAM4%">',
		    'smiley'	=> qq[<IMG src="$IMAGE_URLPATH/smileys/%PARAM1%.gif" width="16" alt="%PARAM1%">],
		    'url'	=> '<A href="%PARAM1%" target="_blank">',
		    'uri'	=> '<A href="%PARAM1%" target="_blank">',
		    'href'	=> '<A href="%PARAM1%" target="_blank">',
		    'link'	=> '<A href="%PARAM1%" target="_blank">',
		    'hyperlink'	=> '<A href="%PARAM1%" target="_blank">',
		    'mail'	=> '<A href="mailto:%PARAM1%?subject=Hello%20from%20X-Forum!">',
		    'email'	=> '<A href="mailto:%PARAM1%?subject=Hello%20from%20X-Forum!">',
		    'e-mail'	=> '<A href="mailto:%PARAM1%?subject=Hello%20from%20X-Forum!">',
		    'smtp'	=> '<A href="mailto:%PARAM1%?subject=Hello%20from%20X-Forum!">',
		    'shadow'	=> '<DIV style="width: 100%; filter:shadow(color=%PARAM1%, direction=%PARAM2%)">',
		    'glow'	=> '<DIV style="width: 100%; filter:glow(color=%PARAM1%, strength=%PARAM2%)">',
		  );




# XBBC codes that require an closing tags.
#____________________________________________________________________
#
# This specifies the HTML closing tag. If omitted,
# the code doens't need a closing tag.
#____________________________________________________________________
#

%XBBCCloseCodes	= ( 'b' 	=> '</B>',
		    'i'		=> '</I>',
		    'u'		=> '</U>',
		    's'		=> '</STRIKE>',
		    'font'	=> '</FONT>',
		    'size'	=> '</FONT>',
		    'color'	=> '</FONT>',
		    'red'	=> '</FONT>',
		    'blue'	=> '</FONT>',
		    'green'	=> '</FONT>',
		    'yellow'	=> '</FONT>',
		    'purple'	=> '</FONT>',
		    'black'	=> '</FONT>',
		    'white'	=> '</FONT>',
		    'gray'	=> '</FONT>',
		    'align'	=> '</DIV>',
		    'tt'	=> '</TT>',
		    'code'	=> '</CODE>',
		    'pre'	=> '</CODE>',
		    'nomarkup'	=> '<!--END NOMARKUP-->',
		    'sub'	=> '</SUB>',
		    'sup'	=> '</SUP>',
		    'list'	=> '</UL>',
		    'enum'	=> '</OL>',
		    'move'	=> '</MARQUEE>',
		    'indent'	=> '</BLOCKQUOTE>',
		    'quote'	=> '<HR></BLOCKQUOTE></FONT>',
		    'quotepost'	=> '<HR></BLOCKQUOTE></FONT>',
		    'table'	=> '</TABLE>',
		    'row'	=> '</FONT></TD></TR>',
		    'url'	=> '</A>',
		    'uri'	=> '</A>',
		    'href'	=> '</A>',
		    'link'	=> '</A>',
		    'hyperlink'	=> '</A>',
		    'mail'	=> '</A>',
		    'email'	=> '</A>',
		    'e-mail'	=> '</A>',
		    'smtp'	=> '</A>',
		    'shadow'	=> '</DIV>',
		    'glow'	=> '</DIV>',
		  );




# XBBC Inline codes
#____________________________________________________________________
#
# These codes should be inlined, and any line breaks after will be removed by the XBBC parser
# If you remove these codes, you'll notice that some unexpected line breaks could appear after the codes
# This is because standard line breaks, entered in the post-contents-textfield, will be converted to <BR> codes.
#____________________________________________________________________
#

@XBBCInlineCodes	= qw(
				left	center	right	justify
				list	enum	move	nomarkup
				table	row	|	hr
				-	-n	-@	-o
				-#	-u	-l	-i
				indent	quote	quotepost
				shadow	glow	pre
			  );


1;
